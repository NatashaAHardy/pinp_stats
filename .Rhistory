#Manipulate data to include only samples that contained DNA
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
#scale_y_discrete(breaks= NULL) +
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=24), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=24),
axis.text.x=element_blank(),
legend.text=element_text(size=24),
legend.title=element_text(size=24)
) +
theme(legend.position=c(0.50,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4a.pal, name="Taxa:") +
labs(title ="a) Hard-part detections", y = "") +
#x="Individual sample & Sampling time", y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4a_hptaxa
ggsave('figures/Final versions/fig4a_hptaxa_RRA_label.pdf', plot = fig4a_hptaxa, width = 12, height = 12, dpi = 300)
### Figure 4b dna detections seabird presence/absence
fig4b_dna_detect = otu_hp_master %>%
filter(detect > 0, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=24), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=24),
axis.text.x=element_blank(),
legend.text=element_text(size=24),
legend.title=element_text(size=24)
) +
theme(legend.position=c(0.50,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
#guides(fill=guide_legend(title=))+
labs(title ="b) DNA-based detections", y = "") + # Axis labels
#, y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4b_dna_detect
ggsave('figures/Final versions/fig4b_dna_detect.pdf', plot = fig4b_dna_detect, width = 12, height = 12, dpi = 300)
#create common axis titles
y4.grob <- textGrob("Sample date: sample number", gp=gpar(fontsize=24), rot=90) #fontface="bold", col="blue",
x4.grob <- textGrob("Presence of seabird taxa in samples", gp=gpar(fontsize=24)) #fontface="bold", col="blue",
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/fig4_panel.pdf", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/fig4_panel.jpeg", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
fig4a_hptaxa = otu_hp_master %>%
filter(detect > 0, method == "hard-parts") %>%
#Manipulate data to include only samples that contained DNA
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
#scale_y_discrete(breaks= NULL) +
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=28), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=28),
axis.text.x=element_blank(),
legend.text=element_text(size=28),
legend.title=element_text(size=28)
) +
theme(legend.position=c(0.50,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4a.pal, name="Taxa:") +
labs(title ="a) Hard-part detections", y = "") +
#x="Individual sample & Sampling time", y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4a_hptaxa
fig4b_dna_detect = otu_hp_master %>%
filter(detect > 0, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=28), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=28),
axis.text.x=element_blank(),
legend.text=element_text(size=28),
legend.title=element_text(size=28)
) +
theme(legend.position=c(0.50,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
#guides(fill=guide_legend(title=))+
labs(title ="b) DNA-based detections", y = "") + # Axis labels
#, y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4b_dna_detect
#create common axis titles
y4.grob <- textGrob("Sample date: sample number", gp=gpar(fontsize=28), rot=90) #fontface="bold", col="blue",
x4.grob <- textGrob("Presence of seabird taxa in samples", gp=gpar(fontsize=28)) #fontface="bold", col="blue",
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/fig4_panel.pdf", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/fig4_panel.jpeg", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
### Figure 4b dna detections seabird presence/absence
fig4b_dna_detect = otu_hp_master %>%
filter(detect > 0, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=28), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=28),
axis.text.x=element_blank(),
legend.text=element_text(size=28),
legend.title=element_text(size=28)
) +
theme(legend.position=c(0.50,0.15), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
#guides(fill=guide_legend(title=))+
labs(title ="b) DNA-based detections", y = "") + # Axis labels
#, y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4b_dna_detect
#create common axis titles
y4.grob <- textGrob("Sample date: sample number", gp=gpar(fontsize=28), rot=90) #fontface="bold", col="blue",
x4.grob <- textGrob("Presence of seabird taxa in samples", gp=gpar(fontsize=28)) #fontface="bold", col="blue",
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/fig4_panel.pdf", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/fig4_panel.jpeg", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
### Figure 4b dna detections seabird presence/absence
fig4b_dna_detect = otu_hp_master %>%
filter(detect > 0, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=detect, fill=Taxa), stat="identity", position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=28), #face="bold",
#axis.title.x=element_text(size=18),
axis.title.y=element_blank(),
axis.text=element_text(size=28),
axis.text.x=element_blank(),
legend.text=element_text(size=28),
legend.title=element_text(size=28)
) +
theme(legend.position=c(0.50,0.11), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
#guides(fill=guide_legend(title=))+
labs(title ="b) DNA-based detections", y = "") + # Axis labels
#, y="Presence of seabird remains in samples"
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(2.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
y4.grob <- textGrob("Sample date: sample number", gp=gpar(fontsize=28), rot=90) #fontface="bold", col="blue",
x4.grob <- textGrob("Presence of seabird taxa in samples", gp=gpar(fontsize=28)) #fontface="bold", col="blue",
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/fig4_panel.pdf", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/fig4_panel.jpeg", plot = fig4_panel_ms,
width = 20, height = 14, scale = 0.95, dpi = 300)
penguin_haplos_sample$location
penguin_haplos_sample$location <- factor(penguin_haplos_sample$location, levels = c("Cape Bridgewater", "Montague Island"), labels = c("Cape Bridgewater", "Barunguba"))
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text.y =element_text(size=18),
axis.text.x =element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig7_haplo_presence.pdf'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig7_haplo_presence.jpg'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=20),
axis.title=element_text(size=20),
axis.text.y =element_text(size=20),
axis.text.x =element_blank(),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.75)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
ggsave(here('figures/Final versions/fig7_haplo_presence.pdf'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig7_haplo_presence.jpg'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
#Check working directory - the same as the doc directory.
#getwd()
#Install Packages as needed
#install.packages("rcompanion")
#Load
library(tidyverse)
library(tidyr)
library(tidytext)
#library(reshape)
library(plyr)
library(dplyr)
library(PNWColors)
library(lattice)
library(reshape2)
library(lme4)
library(ggplot2)
library(rcompanion)
library(gg.gap)
library(forcats)
library(devtools)
library(cowplot)
library(grid)
library(gridExtra)
library(scales)
library(ggpubr)
library(here)
"%notin%" = Negate('%in%')
here::here()
#Note that loading all these packages is hell because of overlap in functions, some packages being superceded but still requiring each other or requiring functions from one package to another. You'll notice I had to force a lot of functions by calling the package as follows
#data %>% package::function(etc). I'm sure there are more talented and savvy coders than me who can figure this out more elegantly.
#7 penguin haplotypes
penguin_haplos_export <- read.csv(here("data/input_data/penguin_haplos_use.csv"), header=TRUE)
penguin_haplos = penguin_haplos_export %>%
dplyr::select(-time) %>%
dplyr::rename(haplo_1 = `SUM.of.haplo_1`,
haplo_2 = `SUM.of.haplo_2`,
haplo_3 = `SUM.of.haplo_3`,
haplo_4 = `SUM.of.haplo_4`,
haplo_5 = `SUM.of.haplo_5`#,
#haplo_6 = `SUM.of.haplo_6`,
#haplo_7 = `SUM.of.haplo_7`
) %>%
#Renamed columns
reshape2::melt(id.vars=c("sample_id", "location_id", "location", "time_id", "group_id"), variable.name = "haplotype", value.name = "seq_abun") %>%
mutate(seq_presence = if_else(seq_abun > 0, "1", "0")) %>%
filter(seq_abun > 1)
penguin_haplos_sample = penguin_haplos %>%
separate(sample_id, c("loc", "month", "year", "sample"))
penguin_haplos_sample$sample <- as.factor(penguin_haplos_sample$sample)
penguin_haplos_sample$time_id <- as.factor(penguin_haplos_sample$time_id)
#unique(penguin_haplos_sample$time_id)
penguin_haplos_sample$time_id <- factor(penguin_haplos_sample$time_id, levels = c("Jan_16", "Jan_17", "Sep_16"), labels = c("Jan'16", "Jan'17", "Sep'16"))
penguin_haplos_sample$location <- factor(penguin_haplos_sample$location, levels = c("Cape Bridgewater", "Montague Island"), labels = c("Cape Bridgewater", "Barunguba"))
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=20),
axis.title=element_text(size=20),
axis.text.y =element_text(size=20),
axis.text.x =element_blank(),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.75)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig7_haplo_presence.pdf'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig7_haplo_presence.jpg'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
#Little penguin haplotype presence in samples, including haplotype abundance data
#Colour palette
fig7.pal <- pnw_palette(5, name = "Sunset", type = "continuous")
## We want a graph displaying the proportional abundance of sequences per sample, with time on the x-axis and proportion on the y-axis
## Similar to my excel mock-up graph
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=20),
axis.title=element_text(size=20),
axis.text.y =element_text(size=20),
axis.text.x =element_blank(),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.75)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig5_5haplo_presence.pdf'), plot = fig7_haplo_presence, width = 12, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig5_5haplo_presence.jpg'), plot = fig7_haplo_presence, width = 12, height = 10, dpi = 300)
#Little penguin haplotype presence in samples, including haplotype abundance data
#Colour palette
fig7.pal <- pnw_palette(5, name = "Sunset", type = "continuous")
## We want a graph displaying the proportional abundance of sequences per sample, with time on the x-axis and proportion on the y-axis
## Similar to my excel mock-up graph
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=20),
axis.title=element_text(size=20),
axis.text.y =element_text(size=20),
axis.text.x =element_blank(),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.75)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig5_5haplo_presence.pdf'), plot = fig7_haplo_presence, width = 11, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig5_5haplo_presence.jpg'), plot = fig7_haplo_presence, width = 11, height = 10, dpi = 300)
#7 penguin haplotypes
penguin_haplos_export <- read.csv(here("data/input_data/penguin_haplos_use.csv"), header=TRUE)
penguin_haplos = penguin_haplos_export %>%
dplyr::select(-time) %>%
dplyr::rename(haplo_1 = `SUM.of.haplo_1`,
haplo_2 = `SUM.of.haplo_2`,
haplo_3 = `SUM.of.haplo_3`,
haplo_4 = `SUM.of.haplo_4`,
haplo_5 = `SUM.of.haplo_5`#,
#haplo_6 = `SUM.of.haplo_6`,
#haplo_7 = `SUM.of.haplo_7`
) %>%
#Renamed columns
reshape2::melt(id.vars=c("sample_id", "location_id", "location", "time_id", "group_id"), variable.name = "haplotype", value.name = "seq_abun") %>%
mutate(seq_presence = if_else(seq_abun > 0, "1", "0")) %>%
filter(seq_abun > 1)
penguin_haplos_sample = penguin_haplos %>%
separate(sample_id, c("loc", "month", "year", "sample"))
penguin_haplos_sample$sample <- as.factor(penguin_haplos_sample$sample)
penguin_haplos_sample$time_id <- as.factor(penguin_haplos_sample$time_id)
#unique(penguin_haplos_sample$time_id)
penguin_haplos_sample$time_id <- factor(penguin_haplos_sample$time_id, levels = c("Jan_16", "Jan_17", "Sep_16"), labels = c("Jan'16", "Jan'17", "Sep'16"))
penguin_haplos_sample$location <- factor(penguin_haplos_sample$location, levels = c("Cape Bridgewater", "Montague Island"), labels = c("Cape Bridgewater", "Barunguba"))
#Little penguin haplotype presence in samples, including haplotype abundance data
#Colour palette
fig7.pal <- pnw_palette(5, name = "Sunset", type = "continuous")
## We want a graph displaying the proportional abundance of sequences per sample, with time on the x-axis and proportion on the y-axis
## Similar to my excel mock-up graph
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=20),
axis.title=element_text(size=20),
axis.text.y =element_text(size=20),
axis.text.x =element_blank(),
legend.text=element_text(size=20),
legend.title=element_text(size=20),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.75)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig5_5haplo_presence.pdf'), plot = fig7_haplo_presence, width = 11, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig5_5haplo_presence.jpg'), plot = fig7_haplo_presence, width = 11, height = 10, dpi = 300)

facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS3a_bird
ggsave('figures/Final versions/figS3a_birddetect_location.jpeg', plot = figS3a_bird, width = 8, height = 10, dpi = 300)
#Penguin detections by location & time (standard DNA QC)
#For ESM
#Figure S2b
figS3b_penguin <- ggplot(penguin_master_group2, aes(x=time_id, y=detected, fill=metric)) +
geom_bar(stat="identity",position="dodge")+
coord_flip()+
ylim(0,8)+
ggtitle("b) Little penguin (E. minor) detections")+
theme_classic() +
theme(panel.grid.major = element_blank(),
plot.title=element_text(size=18),
axis.title=element_blank(),
axis.text=element_text(size=18),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
) +
#theme(axis.text.x=element_blank(), legend.position="top")+
theme(legend.position=c(0.75,0.38), legend.justification=c(0.4,0.5))+
scale_fill_manual(values=fig4.pal)+
guides(fill=guide_legend(title="Metric:"))+
#guides(fill=FALSE)+ #Remove legend for plotting alongside bird figure #guide_legend(title="Metric:")
#labs(x="Sample time", y="Detections (number of samples containing remains)") + #title ="a) Number of samples detecting seabirds",
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS3b_penguin
ggsave('figures/Final versions/figS3b_penguin_detect_location.jpeg', plot = figS3b_penguin, width = 8, height = 10, dpi = 300)
#Merge the following plots into a single panel
#figS3a_bird & figS3b_penguin
#create common axis titles
yS1.grob <- textGrob("Sample date", gp=gpar(fontsize=18), rot=90) #fontface="bold", col="blue",
xS1.grob <- textGrob("Detections (number of samples containing remains)", gp=gpar(fontsize=18)) #fontface="bold", col="blue",
#combine using cowplot
figS3_panel_esm = plot_grid(figS3a_bird, figS3b_penguin,
ncol = 2)
#add to plot
bird_panel_esm = grid.arrange(arrangeGrob(figS3_panel_esm, left = yS1.grob, bottom = xS1.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/figS3_bird_panel_esm.pdf", plot = bird_panel_esm, width = 14, height = 12, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/figS3_bird_panel_esm.jpeg", plot = bird_panel_esm, width = 14, height = 12, scale = 0.95, dpi = 300)
rm(test)
rm(otu_subset)
#Figure 4c - most abundant sequences
fig4c_otu_abun = otu_hp_master %>%
filter(seq_abun > 1, method == "DNA standard QC") %>%
mutate(trace_high = factor(if_else(seq_abun >= 30, "high", "trace"), levels = c("trace", "high"))) %>% #Add trace vs. high DNA abundance
ggplot() +
geom_bar(aes(x=time_id:sample, y=seq_abun, fill=Taxa), stat="identity", position = "dodge", width = 0.75) +
coord_flip() +
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(size=18), #face="bold",
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text=element_text(size=18), #axis.text.y=element_blank(),
legend.text=element_text(size=18),
legend.title=element_text(size=18)
) +
theme(legend.position=c(0.75,0.90), legend.justification=c(0.5,0.5)) +
#  theme(legend.position=c(0.20,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:") +
#guides(fill=guide_legend(title=))+
labs(x="Sample date: sample number", y="Total sequence abundance (n)") + # Axis labels #title ="c) Abundance of DNA detected",
facet_grid(location ~ trace_high, scales="free", space='free_y') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig4c_otu_abun
rm(fig4c_otu_abun)
#Illustration of seabird detections by taxon and DNA abundance
#Can exclude samples containing < 40 seqs or other cut-off if needed
#test = otu_hp_master %>%
#  filter(seq_abun >= 40, method == "DNA standard QC")
#Figure S1 - most abundant sequences
figS1_otu_abun = otu_hp_master %>%
filter(seq_abun > 1, method == "DNA standard QC") %>%
mutate(trace_high = factor(if_else(seq_abun >= 30, "high", "trace"), levels = c("trace", "high"))) %>% #Add trace vs. high DNA abundance
ggplot() +
geom_bar(aes(x=time_id:sample, y=seq_abun, fill=Taxa), stat="identity", position = "dodge", width = 0.75) +
coord_flip() +
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(size=18), #face="bold",
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text=element_text(size=18), #axis.text.y=element_blank(),
legend.text=element_text(size=18),
legend.title=element_text(size=18)
) +
theme(legend.position=c(0.75,0.90), legend.justification=c(0.5,0.5)) +
#  theme(legend.position=c(0.20,0.10), legend.justification=c(0.5,0.5)) +
scale_fill_manual(values=fig4b.pal, name="Taxa:") +
#guides(fill=guide_legend(title=))+
labs(x="Sample date: sample number", y="Total sequence abundance (n)") + # Axis labels #title ="c) Abundance of DNA detected",
facet_grid(location ~ trace_high, scales="free", space='free_y') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS1_otu_abun
#Save as jpeg
ggsave('figS1_otu_abun.pdf', plot = figS1_otu_abun, width = 12, height = 12, dpi = 300)
#In pdf:
#Need to italicise a portion of species names
#Save as jpeg
ggsave('figures/Final versions/figS1_otu_abun.pdf', plot = figS1_otu_abun, width = 12, height = 12, dpi = 300)
#Save as jpeg
ggsave('figures/Final versions/figS1_otu_abun.pdf', plot = figS1_otu_abun, width = 12, height = 12, dpi = 300)
#Need the following plots
#fig4a_hptaxa and fig4b_dna_detect
#create common axis titles
y4.grob <- textGrob("Sample date: sample number", gp=gpar(fontsize=20), rot=90) #fontface="bold", col="blue",
x4.grob <- textGrob("Presence of seabird taxa in samples", gp=gpar(fontsize=20)) #fontface="bold", col="blue",
#Combine plots
fig4_panel_test=grid.arrange(fig4a_hptaxa, #+  theme(legend.position=c(0.5, 0.90)
fig4b_dna_detect, #+ theme(legend.position=c(0.5, 0.90))
#fig4c_otu_abun + theme(legend.position=c(0.5, 0.90)), #put in ESM Fig. S1
nrow=1)
fig4_panel_ms = grid.arrange(arrangeGrob(fig4_panel_test, left = y4.grob, bottom = x4.grob, padding = unit(1, "line")))
ggsave("figures/Final versions/fig4_panel.pdf", plot = fig4_panel_ms, width = 20, height = 14, scale = 0.95, dpi = 300)
ggsave("figures/Final versions/fig4_panel.jpeg", plot = fig4_panel_ms, width = 20, height = 14, scale = 0.95, dpi = 300)
View(y2.grob)
figS1_otu_abun
#Figure 5a
figS2_otu_RRA <- otu_hp_master %>%
filter(seq_abun >= 1, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=seq_prop, fill=Taxa), stat="identity") +
#ggplot(otu_med_abundant, aes(x=time_id:sample_id, y=seq_prop, fill=OTU)) +
#geom_bar(stat="identity",position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text=element_text(size=18),
#axis.text.y=element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16)#,
#legend.position="top"
) +
theme(legend.position=c(0.75,0.25), legend.justification=c(0.4,0.5))+
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
labs(x="Individual sample / Sampling time", y="Relative DNA abudance (%)") + # Axis labels
#title ="a) Total sequence abundance (n) of seabirds across samples and locations",
#facet_zoom(ylim = c(0, 5))+
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS2_otu_RRA
ggsave('figS2_otu_totalRA.pdf', plot = figS2_otu_RRA, width = 8, height = 12, dpi = 300)
#Total abundance of OTUs per sample, location and time
#Illustration of relative contribution of seabirds to each sample in relation to the DNA abundance recovered within samples.
#Figure 5a
figSX_otu_RRA <- otu_hp_master %>%
filter(seq_abun >= 1, method == "DNA standard QC") %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=seq_prop, fill=Taxa), stat="identity") +
#ggplot(otu_med_abundant, aes(x=time_id:sample_id, y=seq_prop, fill=OTU)) +
#geom_bar(stat="identity",position="dodge")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text=element_text(size=18),
#axis.text.y=element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16)#,
#legend.position="top"
) +
theme(legend.position=c(0.75,0.25), legend.justification=c(0.4,0.5))+
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
labs(x="Individual sample / Sampling time", y="Relative DNA abudance (%)") + # Axis labels
#title ="a) Total sequence abundance (n) of seabirds across samples and locations",
#facet_zoom(ylim = c(0, 5))+
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figSX_otu_RRA
ggsave('figSX_otu_totalRA.pdf', plot = figSX_otu_RRA, width = 8, height = 12, dpi = 300)
ggsave('figures/Final versions/figSX_otu_totalRA.pdf', plot = figSX_otu_RRA, width = 8, height = 12, dpi = 300)
ggsave('figures/ESM/figS3a_birddetect_location.jpeg', plot = figS3a_bird, width = 8, height = 10, dpi = 300)
ggsave('figures/ESM/figS3b_penguin_detect_location.jpeg', plot = figS3b_penguin, width = 8, height = 10, dpi = 300)
ggsave("figures/ESM/figS3_bird_panel_esm.pdf", plot = bird_panel_esm, width = 14, height = 12, scale = 0.95, dpi = 300)
ggsave("figures/ESM/figS3_bird_panel_esm.jpeg", plot = bird_panel_esm, width = 14, height = 12, scale = 0.95, dpi = 300)
#Save as jpeg
ggsave('figures/ESM/figS1_otu_abun.pdf', plot = figS1_otu_abun, width = 12, height = 12, dpi = 300)
ggsave('figures/ESM/figSX_otu_totalRA.pdf', plot = figSX_otu_RRA, width = 8, height = 12, dpi = 300)
show_col(fig5.pal)
show_col(fig4.pal)
#Colour palette
fig5.pal <- pnw_palette(4, name = "Sunset", type = "continuous")
otu_rra = otu_metrics %>%
separate(sample_id, c("loc", "month", "year", "sample")) %>%
select(location:prop_abun) %>%
#mutate(seq_pa = if_else(seq_abun > 0, 1, 0)) %>%
filter(seq_abun > 1)
otu_rra$sample <- as.factor(otu_rra$sample)
str(otu_rra)
levels(otu_rra$location)
levels(otu_rra$time_id)
View(otu_rra)
levels(otu_rra$OTU)
figS2_otu_RRA = otu_rra %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=prop_abun, fill=OTU), stat="identity")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text=element_text(size=18),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
labs(x="Sample date: sample number", y="Relative DNA abundance (%)") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS2_otu_RRA
ggsave('figures/ESM/figS2_otu_RRA.pdf', plot = figS2_otu_RRA, width = 12, height = 12, dpi = 300)
str(penguin_haplos)
figS3_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text.y =element_text(size=18),
axis.text.x =element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
#Colour palette
figS3.pal <- pnw_palette(8, name = "Sunset", type = "continuous")
#Colour palette
fig7.pal <- pnw_palette(8, name = "Sunset", type = "continuous")
fig7_haplo_presence = penguin_haplos_sample %>%
#penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample, y=seq_presence, fill=haplotype)) +
coord_flip()+
geom_bar(stat="identity")+
geom_text(aes(label=seq_abun,
#vjust=0,
#hjust=2
),
colour="white",
size=6,
position = position_stack(vjust = 0.5)) + #xlab("")
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text.y =element_text(size=18),
axis.text.x =element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
fig7_haplo_presence
ggsave(here('figures/Final versions/fig7_haplo_presence.pdf'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
ggsave(here('figures/Final versions/fig7_haplo_presence.jpg'), plot = fig7_haplo_presence, width = 10, height = 10, dpi = 300)
#Here we want to make a bubble plot
figS4_haplo_bubble = penguin_haplos %>%
filter(seq_abun > 1) %>%
ggplot(aes(x=time_id:sample_id, y=seq_presence, fill=haplotype, colour=haplotype, size=seq_abun)) + #,
geom_point(position="stack") +
geom_text(aes(label=seq_abun, #rev(seq_abun) this appeared to completely reorder the seq data all over the graph
#vjust=0.5,
#hjust=2
),
#colour="#333333",
colour="white",
size=6,
position = position_stack(vjust = 1)) +
coord_flip() +
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.x = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text.y =element_text(size=18),
axis.text.x =element_blank(),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top") +
scale_fill_manual(values=figS3.pal, name="Haplotype:")+
scale_colour_manual(values=figS3.pal, name="Haplotype:")+
scale_size(range = c(12, 32),
guide=FALSE) +
guides(colour = guide_legend(override.aes = list(size=10)))+
labs(x="Sample date: sample number", y="Little penguin haplotypes & sequence abundance") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS4_haplo_bubble
ggsave(here('figures/ESM/figS4_haplo_bubble.pdf'), plot = figS4_haplo_bubble, width = 10, height = 10, dpi = 300)
ggsave(here('figures/ESM/figS4_haplo_bubble.pdf'), plot = figS4_haplo_bubble, width = 11, height = 10, dpi = 300)
ggsave(here('figures/ESM/figS4_haplo_bubble.pdf'), plot = figS4_haplo_bubble, width = 12, height = 10, dpi = 300)
View(bird_master)
#Exclude LJP from analyses, as well as stringent QC because we don't want to compare that.
str(bird_master)
#Histogram
hist(bird_med$detection)
#Data distributions
dotchart(bird_med$detection)
bird_master_test = bird_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
dplyr::filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
penguin_master_test = penguin_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
bird_master_test = bird_master
bird_master_test = bird_master %>%
select(location, time_id, group_id, metric, method, detection)
View(bird_master)
bird_master_test = bird_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
dplyr::filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
View(bird_master_test)
#Data distributions
dotchart(bird_med$detection)
#Histogram
hist(bird_med$detection)
#Exclude LJP (Deen Maar) from analyses, as well as stringent QC because we don't want to compare that.
bird_master_test = bird_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
dplyr::filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
penguin_master_test = penguin_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
#Relevelling factors: we logically want CB Sept_15 to be the reference point because it is the earliest time point
levels(bird_master_test$group_id)
bird_master_test$group_id <- factor(bird_master_test$group_id, levels = c("CB_Sep_15","CB_Jan_16","CB_Sep_16","CB_Jan_17","GI_Jan_17","LJP_Mar_17", "MI_Sep_16", "MI_Jan_17"))
levels(penguin_master_test$group_id)
penguin_master_test$group_id <- factor(penguin_master_test$group_id, levels = c("CB_Sep_15","CB_Jan_16","CB_Sep_16","CB_Jan_17","GI_Jan_17","LJP_Mar_17", "MI_Sep_16", "MI_Jan_17"))
penguin_master_test = penguin_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
#Relevelling factors: we logically want CB Sept_15 to be the reference point because it is the earliest time point
levels(bird_master_test$group_id)
bird_master_test$group_id <- factor(bird_master_test$group_id, levels = c("CB_Sep_15","CB_Jan_16","CB_Sep_16","CB_Jan_17","GI_Jan_17","LJP_Mar_17", "MI_Sep_16", "MI_Jan_17"))
levels(penguin_master_test$group_id)
penguin_master_test$group_id <- factor(penguin_master_test$group_id, levels = c("CB_Sep_15","CB_Jan_16","CB_Sep_16","CB_Jan_17","GI_Jan_17","LJP_Mar_17", "MI_Sep_16", "MI_Jan_17"))
penguin_master_test = penguin_master %>%
select(location, time_id, group_id, metric, method, detection) %>%
dplyr::filter(metric == c('hp', 'dna'), location != "Deen Maar", method != "DNA stringent QC")
#Overdispersion? Seems fine
E1 <- resid(bird_model_0, type = "pearson")
Overdispersion <- sum(E1^2) / bird_model_0$df.res #df.res = N-p
Overdispersion
par(mfrow = c(2, 2))
plot(M3)
#Plot Residuals vs. Fitted values
#E1
F1 <- fitted(bird_model_0)
plot(x = F1,
y = E1,
xlab = "Fitted values",
ylab = "Residuals")
#abline(h = 0, v = 0, lty = 2)
#Normality
hist(E1) #, breaks = 15
#non-normal data, hence the binomial regression
#Influential observations
plot(bird_model_0, which = c(4))
plot(cooks.distance(bird_model_0),
type = "h",
ylim = c(0,1))
abline(h=1)
#Plot relationship
plot(x = bird_med$metric,
y = E1,
xlab = "Metric",
ylab = "Residuals")
abline(h = 0, v = 0, lty=2)
#Same as:
boxplot(E1 ~ metric, data = bird_med)
#Per period:
xyplot(E1 ~ metric,
data = bird_med,
panel = function(x,y){
panel.points(x,y, col = 1, pch = 16, cex = 0.7)
panel.loess(x,y, col = 1, lwd = 2)
panel.abline(h=0)
})
#Anova
#Highly significant, not sure if working for our data
bird_detect_anova <- aov(detection ~ metric, data = bird_med)
anova(bird_detect_anova, test = "Chisq")
fig5.pal
#Colour palette
figS2.pal <- pnw_palette(4, name = "Sunset", type = "continuous")
figS2_otu_RRA = otu_rra %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=prop_abun, fill=OTU), stat="identity")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text=element_text(size=18),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=figS2.pal, name="Taxa:")+
labs(x="Sample date: sample number", y="Relative DNA abundance (%)") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS2_otu_RRA
figS2_otu_RRA = otu_rra %>%
ggplot() +
geom_bar(aes(x=time_id:sample, y=prop_abun, fill=OTU), stat="identity")+
coord_flip()+
theme_classic() +
theme(panel.grid.major = element_blank(),
axis.ticks.y = element_blank(),
plot.title=element_text(face="bold", size=18),
axis.title=element_text(size=18),
axis.text=element_text(size=18),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
legend.position="top"
) +
scale_fill_manual(values=fig4b.pal, name="Taxa:")+
labs(x="Sample date: sample number", y="Relative DNA abundance (%)") + # Axis labels
facet_grid(location~., scales="free", space='free') +
theme(strip.text = element_text(size=rel(1.5)), #face="bold",
strip.background = element_rect(fill="lightgrey", colour="black",
size=1))
figS2_otu_RRA
View(hp_taxa_export)
getwd()
getwd()
#Check working directory - the same as the doc directory.
#getwd()
#Install Packages as needed
#install.packages("rcompanion")
#Load
library(tidyverse)
library(tidyr)
library(tidytext)
#library(reshape)
library(plyr)
library(dplyr)
library(PNWColors)
library(lattice)
library(reshape2)
library(lme4)
library(ggplot2)
library(rcompanion)
library(gg.gap)
library(forcats)
library(devtools)
library(cowplot)
library(grid)
library(gridExtra)
library(scales)
library(ggpubr)
library(here)
"%notin%" = Negate('%in%')
here::here()
#Note that loading all these packages is hell because of overlap in functions, some packages being superceded but still requiring each other or requiring functions from one package to another. You'll notice I had to force a lot of functions by calling the package as follows
#data %>% package::function(etc). I'm sure there are more talented and savvy coders than me who can figure this out more elegantly.
